apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.microservice.name }}-deployment
  labels:
    app: {{ .Values.microservice.name }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app: {{ .Values.microservice.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.microservice.name }}
    spec:
      serviceAccountName: {{ .Values.microservice.name }}-service-account
      containers:
        - name: {{ .Values.microservice.name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          env:
{{- if .Values.env }}
{{- range $key, $value := .Values.env }}
            - name: {{ $key }}
              value: "{{ $value }}"
{{- end }}
{{- end }}

{{- if .Values.envFromSecret }}
{{- range $key, $value := .Values.envFromSecret }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ $value.name }}
                  key: {{ $value.key }}
{{- end }}
{{- end }}

{{- if .Values.envFromConfigMap }}
{{- range $key, $value := .Values.envFromConfigMap }}
            - name: {{ $key }}
              valueFrom:
                configMapKeyRef:
                  name: {{ $value.name }}
                  key: {{ $value.key }}
{{- end }}
{{- end }}

          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.microservice.port }}
              protocol: TCP
          resources:
            limits:
              memory: "{{ .Values.resources.limits.memory }}"
              cpu: "{{ .Values.resources.limits.cpu }}"
            requests:
              memory: "{{ .Values.resources.requests.memory }}"
              cpu: "{{ .Values.resources.requests.cpu }}"

          livenessProbe:
            httpGet:
              path: {{ .Values.livenessProbe.path | default "actuator/health/liveness" }}
              port: {{ .Values.microservice.port }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds | default 120 }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds | default 10 }}

          readinessProbe:
            httpGet:
              path: {{ .Values.readinessProbe.path | default "actuator/health/readiness" }}
              port: {{ .Values.microservice.port }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds | default 120 }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds | default 10 }}

                     


# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: employee-deployment
#   namespace: ems
#   labels:
#     app: employee
# spec:
#   replicas: 2
#   selector:
#     matchLabels:
#       app: employee
#   template:
#     metadata:
#       labels:
#         app: employee
#     spec:
#       containers:
#       - name: employee-app
#         image: koti21/employee:latest
#         ports:
#         - containerPort: 8080
#         resources:
#           requests:
#             memory: "256Mi"
#             cpu: "500m"
#           limits:
#             memory: "512Mi"
#             cpu: "1"