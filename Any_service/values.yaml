
# replicaCount: 2

# microservice:
#   name: notifications
#   namespace: hrms
#   port: 8085


# image:
#   repository: 435073375740.dkr.ecr.ap-south-1.amazonaws.com/hrms/notifications
#   pullPolicy: IfNotPresent
#   tag: "v1.0.0"

# env:
#   APPLICATION_NAME: Notifications
#   DATABASE_URL: 
#   JPA_HIBERNATE_DDL_AUTO: update

#   CACHE_TYPE: redis
#   DATA_REDIS_SENTINEL_MASTER: mymaster
#   DATA_REDIS_PASSWORD: RedisPasswordMaster
#   DATA_REDIS_SENTINEL_NODES: my-redis.redis.svc.cluster.local:26379

#   SERVER_ADDRESS: 0.0.0.0
#   SERVER_PORT: 8085
#   MAIL_HOST: email-smtp.eu-north-1.amazonaws.com
#   SMTP_PORT: 587
#   FROM_EMAIL_ADDRESS: no-reply@anasolconsultancyservices.com



# envFromSecret:
#   DB_USERNAME:
#     name: notification-db-secret
#     key: username
#   DB_PASSWORD:
#     name: notification-db-secret
#     key: password
#   MAIL_USERNAME:
#     name: notification-aws-secret
#     key: smtp-username
#   MAIL_PASSWORD:
#     name: notification-aws-secret
#     key: smtp-password
  

# resources: 
#   limits:
#     cpu: 1000m
#     memory: 512Mi
#   requests:
#     cpu: 100m
#     memory: 128Mi


# autoscaling:
#   enabled: false
#   minReplicas: 2
#   maxReplicas: 10
#   targetCPUUtilizationPercentage: 80

# livenessProbe:
#   path: "actuator/health/liveness"
#   initialDelaySeconds: 180
#   periodSeconds: 10

# readinessProbe:
#   path: "actuator/health/readiness"
#   initialDelaySeconds: 150
#   periodSeconds: 10

# service:
#   type: NodePort
#   port: 80
#   nodePort: 30083

# gateway_service:
#   namespace: istio-gateway


# httprouts:
#   hostnames: ["hrms.anasolconsultancyservices.com"]
#   path: "/api/notification"
#   timeout_request: "3s"
#   retry_codes: [500, 502, 503, 504]
#   retry_attempts: 3
#   retry_backoff: "1s"

# serviceAccount:
#   annotations:
#     example.com/annotation: "value"
#   rules:
#     - apiGroups: [""]
#       resources: ["pods", "services", "endpoints"] 
#       verbs: ["get", "list", "watch"]

